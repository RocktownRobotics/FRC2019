/**
	This was on of our CommandGroups, essentially a set of commands that would run sequentially. This 
one moved from a specific predetermined starting position (right) to operate a game scoring object(scale)
The Scale had two sides, only one of which would be beneficial, so the program had to choose based on 
field data which side to go to. It would actually do things by running subprograms, like the example
below
*/







package org.usfirst.frc.team3274.robot.commands.autonomous.programs;

import org.usfirst.frc.team3274.robot.Robot;
import org.usfirst.frc.team3274.robot.commands.ArmLock;
import org.usfirst.frc.team3274.robot.commands.Interrupt;
import org.usfirst.frc.team3274.robot.commands.autonomous.groups.RightStartToLeftScale;
import org.usfirst.frc.team3274.robot.commands.autonomous.groups.RightStartToScale;
import org.usfirst.frc.team3274.robot.commands.autonomous.groups.RightToRight;
import org.usfirst.frc.team3274.robot.commands.autonomous.groups.RightToRightScale;

import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.command.CommandGroup;

public class ScaleFromRight extends CommandGroup {

	/**
	 * Here is how you would make the robot drive forward 3 feet and then turn left
	 * 90 degrees.
	 */

	public boolean switchIsRight() {
		// check if string has 3 characters
		if (Robot.gameData.length() >= 3) {
			// check if first character in string is 'R'
			if (Robot.gameData.toUpperCase().charAt(0) == 'R') {
				return true;
			} else {
				return false;
			}
		} else {
			DriverStation.reportError("Failed to read a correct FMS message: " + Robot.gameData, true);
			System.out.println(
					"Failed: Field said something unintelligable... Robot hasn't a clue what it should do... Left is always the answer");
			return false;
		}
	}

	public boolean scaleIsRight() {
		// check if string has 3 characters
		if (Robot.gameData.length() >= 3) {
			// check if second character in string is 'R'
			if (Robot.gameData.toUpperCase().charAt(1) == 'R') {
				return true;
			} else {
				return false;
			}
		} else {
			DriverStation.reportError("Failed to read a correct FMS message", true);
			System.out.println(
					"Failed: Field said something unintelligable... Robot hasn't a clue what it should do... Left is always the answer");

			return false;
		}
	}

	public ScaleFromRight() {

		addParallel(new ArmLock());
		addSequential(new RightToRightScale());
		// make sure robot is in low gear
		// addSequential(new ShiftDownForTime());
		if (this.scaleIsRight()) {
			// right to right scale
			addSequential(new RightStartToScale());
			//addSequential(new RightScaleToCube());
		} else {
			// right to left scale
//			addSequential(new RightStartToLeftScale());
		}

		addSequential(new Interrupt(Robot.kClawArm));
	}
}
